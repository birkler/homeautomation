# https://github.com/brianhanifin/esphome-config

# https://community.home-assistant.io/t/my-garden-irrigation/99686


#https://github.com/esphome/esphome/issues/25


#https://github.com/benct/lovelace-multiple-entity-row



#
#                       3V3 (1) o | 
#                       GND (2) o | 
#                    ESP_EN (3) o | 
#                     GPIO5 (4) o |  [Reserved ETH]
#            SDA      GPIO2 (5) o | SDA
#            SCL      GPIO4 (6) o | SCL
#                    GPIO12 (7) o | 
#                    GPIO13 (8) o | 
#                    GPIO14 (9) o | DHT
#                    GPIO15(10) o | 
#                    GPIO16(11) o | 
#                    GPIO17(12) o |  [Reserved ETH]
#                    GPIO32(13) o | 
#                    GPIO33(14) o |  [Reserved Status LED]
#                     GPI34(15) o |  [User Button]
#                     GPI35(16) o |  
#                     GPI36(17) o | 
#                     GPI39(18) o | 
#             GND       GND(19) o | 
#             Vcc     5Vext(20) o | 
#
#  LCD: GND,VCC,SDA,SCL
#  Relay PCF2574: GND,VCC,SDA,SCL
#

esphome:
  name: irrigation_controller
  platform: ESP32
  board: esp32-gateway

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO17_OUT
  phy_addr: 0
  power_pin: GPIO12


# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:

ota:

time:
  - platform: homeassistant
    id: global_time
    on_time:
      # Every 30 minutes
      - seconds: 0
        minutes: /30
        then:
          - lambda: |-
              auto time = id(global_time).now();
              bool time_is_valid = time.is_valid();

              int hour = time.hour;
              int minute = time.minute;

              int current_time = hour * 2 + minute / 30;

              int start_time = id(global_start_hour);
              bool active_day = 
                (time.day_of_week == 1 && id(global_sunday_active) > 0) || 
                (time.day_of_week == 2 && id(global_monday_active) > 0) || 
                (time.day_of_week == 3 && id(global_tuesday_active) > 0) || 
                (time.day_of_week == 4 && id(global_wednesday_active) > 0) || 
                (time.day_of_week == 5 && id(global_thursday_active) > 0) || 
                (time.day_of_week == 6 && id(global_friday_active) > 0) || 
                (time.day_of_week == 7 && id(global_saturday_active) > 0);

              if (time_is_valid &&
                  active_day &&
                  id(global_automatic_on) > 0 && 
                  start_time == current_time) 
              {
                  id(irrigation_cycle_active).turn_on();
              }


i2c:
  sda: 2
  scl: 4
  scan: True
  frequency: 100kHz
  id: bus_a

pcf8574:
  - id: 'pcf8574_hub'
    address: 0x24
    pcf8575: False


display:
  - platform: lcd_pcf8574
    id: the_display
    dimensions: 20x4
    address: 0x27
    update_interval: 500ms
    lambda: |-
      std::string text = id(status_text).state;
      const char* test_str = text.c_str();

      it.printf("%s",test_str);
      //it.printf("Zone 1: %d min",id(global_zone1_duration));



globals:
   - id: global_automatic_on
     type: int
     restore_value: yes
     initial_value: '0'
   - id: global_cycle_active
     type: int
     restore_value: no
     initial_value: '0'
   - id: global_ui_state
     type: int
     restore_value: no
     initial_value: '0'
   - id: global_monday_active
     type: int
     restore_value: yes
     initial_value: '0'
   - id: global_tuesday_active
     type: int
     restore_value: yes
     initial_value: '0'
   - id: global_wednesday_active
     type: int
     restore_value: yes
     initial_value: '0'
   - id: global_thursday_active
     type: int
     restore_value: yes
     initial_value: '0'
   - id: global_friday_active
     type: int
     restore_value: yes
     initial_value: '0'
   - id: global_saturday_active
     type: int
     restore_value: yes
     initial_value: '0'
   - id: global_sunday_active
     type: int
     restore_value: yes
     initial_value: '0'

   - id: global_zone1_duration
     type: int
     restore_value: yes
     initial_value: '1'

   - id: global_zone2_duration
     type: int
     restore_value: yes
     initial_value: '1'

   - id: global_zone3_duration
     type: int
     restore_value: yes
     initial_value: '1'

   - id: global_zone4_duration
     type: int
     restore_value: yes
     initial_value: '1'

   - id: global_zone5_duration
     type: int
     restore_value: yes
     initial_value: '1'

   - id: global_zone6_duration
     type: int
     restore_value: yes
     initial_value: '1'

   - id: global_start_hour
     type: int
     restore_value: yes
     initial_value: '20'



sensor:
  - platform: dht
    pin: 14
    model: AM2302
    temperature:
      name: "Garage Temperature"
    humidity:
      name: "Garage Humidity"
    update_interval: 120s

  - platform: template
    name: "Zone 1"
    icon: mdi:timer-outline
    unit_of_measurement: min
    accuracy_decimals: 0
    lambda: |-
      static int prev = -1;
      if (prev != id(global_zone1_duration)) {
        prev = id(global_zone1_duration);
        return id(global_zone1_duration);
      } else {
        return {};
      }
    update_interval: 250ms
  - platform: template
    name: "Zone 2"
    icon: mdi:timer-outline
    unit_of_measurement: min
    accuracy_decimals: 0
    lambda: |-
      static int prev = -1;
      if (prev != id(global_zone2_duration)) {
        prev = id(global_zone2_duration);
        return id(global_zone2_duration);
      } else {
        return {};
      }
    update_interval: 250ms
  - platform: template
    name: "Zone 3"
    icon: mdi:timer-outline
    unit_of_measurement: min
    accuracy_decimals: 0
    lambda: |-
      static int prev = -1;
      if (prev != id(global_zone3_duration)) {
        prev = id(global_zone3_duration);
        return id(global_zone3_duration);
      } else {
        return {};
      }
    update_interval: 250ms
  - platform: template
    name: "Zone 4"
    icon: mdi:timer-outline
    unit_of_measurement: min
    accuracy_decimals: 0
    lambda: |-
      static int prev = -1;
      if (prev != id(global_zone4_duration)) {
        prev = id(global_zone4_duration);
        return id(global_zone4_duration);
      } else {
        return {};
      }
    update_interval: 250ms
  - platform: template
    name: "Zone 5"
    icon: mdi:timer-outline
    unit_of_measurement: min
    accuracy_decimals: 0
    lambda: |-
      static int prev = -1;
      if (prev != id(global_zone5_duration)) {
        prev = id(global_zone5_duration);
        return id(global_zone5_duration);
      } else {
        return {};
      }
    update_interval: 250ms
  - platform: template
    name: "Zone 6"
    icon: mdi:timer-outline
    unit_of_measurement: min
    accuracy_decimals: 0
    lambda: |-
      static int prev = -1;
      if (prev != id(global_zone6_duration)) {
        prev = id(global_zone6_duration);
        return id(global_zone6_duration);
      } else {
        return {};
      }


    update_interval: 250ms



text_sensor:
  - platform: template
    name: "Start Time"
    icon: mdi:clock-outline
    lambda: |-
      static int prev = -1;

      if (prev != id(global_start_hour)) {
        prev = id(global_start_hour);
        char temp[1000];
        int val = id(global_start_hour);
        int val_min = (val & 0x1) ? 30 : 0;
        val >>= 1;
        sprintf(temp,"%02d:%02d", val,val_min);
        std::string str = temp;
        return {str};
      } else {
        return {};
      }
    update_interval: 250ms
  - platform: template
    name: "Status"
    id: status_text
    icon: mdi:script-text-outline
    update_interval: 200ms

    lambda: |-
        static std::string prev_value{};
        char week[8];
        week[0] = id(global_monday_active) > 0 ? 'M' : '_';
        week[1] = id(global_tuesday_active) > 0 ? 'T' : '_';
        week[2] = id(global_wednesday_active) > 0 ? 'W' : '_';
        week[3] = id(global_thursday_active) > 0 ? 'T' : '_';
        week[4] = id(global_friday_active) > 0 ? 'F' : '_';
        week[5] = id(global_saturday_active) > 0 ? 'S' : '_';
        week[6] = id(global_sunday_active) > 0 ? 'S' : '_';
        week[7] = 0;

        int zones_duration[6] = {
          id(global_zone1_duration),
          id(global_zone2_duration),
          id(global_zone3_duration),
          id(global_zone4_duration),
          id(global_zone5_duration),
          id(global_zone6_duration)
        };

        int zone_relay[6] = {
          id(relay_valve_zone1).state,
          id(relay_valve_zone2).state,
          id(relay_valve_zone3).state,
          id(relay_valve_zone4).state,
          id(relay_valve_zone5).state,
          id(relay_valve_zone6).state
        };


        char zone_relay_string[7];
        zone_relay_string[0] = zone_relay[0] ? '1' : '_';
        zone_relay_string[1] = zone_relay[1] ? '2' : '_';
        zone_relay_string[2] = zone_relay[2] ? '3' : '_';
        zone_relay_string[3] = zone_relay[3] ? '4' : '_';
        zone_relay_string[4] = zone_relay[4] ? '5' : '_';
        zone_relay_string[5] = zone_relay[5] ? '6' : '_';
        zone_relay_string[6] = 0;

        std::string result{};
        int Nmaxlen = 1000;
        result.resize(Nmaxlen);
        char* ptr = &result.front();

        char time_str[10];
        const char* time_str_ptr = time_str;

        auto time = id(global_time).now();
        bool time_is_valid = time.is_valid();
        if (time_is_valid) {
          int hour = time.hour;
          int minute = time.minute;
          snprintf(time_str,sizeof(time_str),"%02d:%02d",hour,minute);
        } else {
          time_str_ptr = "??:??";
        }


        int start_hour = id(global_start_hour);
        int start_minute = (start_hour & 0x1) ? 30 : 0;
        start_hour >>= 1;

        bool is_running = id(global_cycle_active) > 0;

        const char* mode_str = "    ";
        if (!time_is_valid) {
          mode_str = "CLK!";
        } else if (is_running) {
          mode_str = " RUN";
        } else if (id(global_automatic_on) > 0) {
          mode_str = "AUTO";
        } else {
          mode_str = " OFF";
        }


        int len = snprintf(
          ptr,
          Nmaxlen,
          "Irrigation     %s\n"
          " %s       %s\n"
          "[%02d:%02d]    [%s]",
          mode_str,
          time_str_ptr, 
          zone_relay_string,
          start_hour,start_minute, week
 
          );

        result.resize(len);

        bool same = prev_value.compare(result) == 0;
        prev_value = result;

        if (same) {
          return {};
        } else {
          id(the_display).update();
          return result;
        }

binary_sensor:
  - platform: status
    name: "Irrigation Controller"


switch:
  - platform: template
    id: irrigation_cycle_active
    name: "Run Cycle"
    icon: mdi:av-timer
    lambda: |-
      if (id(global_cycle_active) > 0) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(global_cycle_active) = 1;
      - script.execute: execute_cycle
    turn_off_action:
      - lambda: |-
          id(global_cycle_active) = 0;
      - script.stop: execute_cycle
      - switch.turn_off: relay_valve_zone1
      - switch.turn_off: relay_valve_zone2
      - switch.turn_off: relay_valve_zone3
      - switch.turn_off: relay_valve_zone4
      - switch.turn_off: relay_valve_zone5
      - switch.turn_off: relay_valve_zone6

  - platform: template
    id: irrigation_schedule_on
    name: "Schedule On"
    icon: mdi:calendar-clock
    lambda: |-
      return id(global_automatic_on) > 0;
    turn_on_action:
      - lambda: |-
          id(global_automatic_on) = 1;
    turn_off_action:
      - lambda: |-
          id(global_automatic_on) = 0;


  - platform: gpio
    pin: 
      pcf8574: pcf8574_hub
      # Use pin number 0
      number: 0
      # One of INPUT or OUTPUT
      mode: OUTPUT
      inverted: True
    name: "Zone 1"
    id: relay_valve_zone1
    icon: mdi:valve
    restore_mode: ALWAYS_OFF
    interlock: &interlock_group [relay_valve_zone1, relay_valve_zone2,relay_valve_zone3,relay_valve_zone4,relay_valve_zone5,relay_valve_zone6]
    interlock_wait_time: 2s
    on_turn_on:
      then:
        - delay: !lambda "return id(global_zone1_duration) * 60 * 1000;"
        - switch.turn_off: relay_valve_zone1

  - platform: gpio
    pin: 
      pcf8574: pcf8574_hub
      # Use pin number 0
      number: 1
      # One of INPUT or OUTPUT
      mode: OUTPUT
      inverted: True
    name: "Zone 2"
    id: relay_valve_zone2
    icon: mdi:valve
    restore_mode: ALWAYS_OFF
    interlock: *interlock_group
    on_turn_on:
      then:
        - delay: !lambda "return id(global_zone2_duration) * 60 * 1000;"
        - switch.turn_off: relay_valve_zone2

  - platform: gpio
    pin: 
      pcf8574: pcf8574_hub
      # Use pin number 0
      number: 2
      # One of INPUT or OUTPUT
      mode: OUTPUT
      inverted: True
    name: "Zone 3"
    id: relay_valve_zone3
    icon: mdi:valve
    restore_mode: ALWAYS_OFF
    interlock: *interlock_group
    on_turn_on:
      then:
        - delay: !lambda "return id(global_zone3_duration) * 60 * 1000;"
        - switch.turn_off: relay_valve_zone3

  - platform: gpio
    pin: 
      pcf8574: pcf8574_hub
      # Use pin number 0
      number: 3
      # One of INPUT or OUTPUT
      mode: OUTPUT
      inverted: True
    name: "Zone 4"
    id: relay_valve_zone4
    icon: mdi:valve
    restore_mode: ALWAYS_OFF
    interlock: *interlock_group
    on_turn_on:
      then:
        - delay: !lambda "return id(global_zone4_duration) * 60 * 1000;"
        - switch.turn_off: relay_valve_zone4

  - platform: gpio
    pin: 
      pcf8574: pcf8574_hub
      # Use pin number 0
      number: 4
      # One of INPUT or OUTPUT
      mode: OUTPUT
      inverted: True
    name: "Zone 5"
    id: relay_valve_zone5
    icon: mdi:valve
    restore_mode: ALWAYS_OFF
    interlock: *interlock_group
    on_turn_on:
      then:
        - delay: !lambda "return id(global_zone5_duration) * 60 * 1000;"
        - switch.turn_off: relay_valve_zone5

  - platform: gpio
    pin: 
      pcf8574: pcf8574_hub
      # Use pin number 0
      number: 5
      # One of INPUT or OUTPUT
      mode: OUTPUT
      inverted: True
    name: "Zone 6"
    id: relay_valve_zone6
    icon: mdi:valve
    restore_mode: ALWAYS_OFF
    interlock: *interlock_group
    on_turn_on:
      then:
        - delay: !lambda "return id(global_zone6_duration) * 60 * 1000;"
        - switch.turn_off: relay_valve_zone6


  - platform: template
    id: irrigation_monday_active
    name: "Monday"
    icon: mdi:calendar-week
    lambda: |-
      if (id(global_monday_active) > 0) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(global_monday_active) = 1;
    turn_off_action:
      - lambda: |-
          id(global_monday_active) = 0;


  - platform: template
    id: irrigation_tuesday_active
    name: "Tuesday"
    icon: mdi:calendar-week
    lambda: |-
      if (id(global_tuesday_active) > 0) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(global_tuesday_active) = 1;
    turn_off_action:
      - lambda: |-
          id(global_tuesday_active) = 0;


  - platform: template
    id: irrigation_wednesday_active
    name: "Wednesday"
    icon: mdi:calendar-week
    lambda: |-
      if (id(global_wednesday_active) > 0) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(global_wednesday_active) = 1;
    turn_off_action:
      - lambda: |-
          id(global_wednesday_active) = 0;

  - platform: template
    id: irrigation_thursday_active
    name: "Thursday"
    icon: mdi:calendar-week
    lambda: |-
      if (id(global_thursday_active) > 0) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(global_thursday_active) = 1;
    turn_off_action:
      - lambda: |-
          id(global_thursday_active) = 0;

  - platform: template
    id: irrigation_friday_active
    name: "Friday"
    icon: mdi:calendar-week
    lambda: |-
      if (id(global_friday_active) > 0) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(global_friday_active) = 1;
    turn_off_action:
      - lambda: |-
          id(global_friday_active) = 0;
  
  - platform: template
    id: irrigation_saturday_active
    name: "Saturday"
    icon: mdi:calendar-week
    lambda: |-
      if (id(global_saturday_active) > 0) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(global_saturday_active) = 1;
    turn_off_action:
      - lambda: |-
          id(global_saturday_active) = 0;

  - platform: template
    id: irrigation_sunday_active
    name: "Sunday"
    icon: mdi:calendar-week
    lambda: |-
      if (id(global_sunday_active) > 0) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(global_sunday_active) = 1;
    turn_off_action:
      - lambda: |-
          id(global_sunday_active) = 0;

  - platform: template
    id: irrigation_zone1_duration_plus
    name: "Zone1 Plus"
    icon: mdi:plus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone1_duration)++;
          id(global_zone1_duration) = min(id(global_zone1_duration),20);

  - platform: template
    id: irrigation_zone1_duration_minus
    name: "Zone1 Minus"
    icon: mdi:minus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone1_duration)--;
          id(global_zone1_duration) = max(id(global_zone1_duration),0);


  - platform: template
    id: irrigation_zone2_duration_plus
    name: "Zone2 Plus"
    icon: mdi:plus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone2_duration)++;
          id(global_zone2_duration) = min(id(global_zone2_duration),20);

  - platform: template
    id: irrigation_zone2_duration_minus
    name: "Zone2 Minus"
    icon: mdi:minus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone2_duration)--;
          id(global_zone2_duration) = max(id(global_zone2_duration),0);

  - platform: template
    id: irrigation_zone3_duration_plus
    name: "Zone3 Plus"
    icon: mdi:plus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone3_duration)++;
          id(global_zone3_duration) = min(id(global_zone3_duration),20);

  - platform: template
    id: irrigation_zone3_duration_minus
    name: "Zone3 Minus"
    icon: mdi:minus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone3_duration)--;
          id(global_zone3_duration) = max(id(global_zone3_duration),0);



  - platform: template
    id: irrigation_zone4_duration_plus
    name: "Zone4 Plus"
    icon: mdi:plus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone4_duration)++;
          id(global_zone4_duration) = min(id(global_zone4_duration),20);

  - platform: template
    id: irrigation_zone4_duration_minus
    name: "Zone4 Minus"
    icon: mdi:minus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone4_duration)--;
          id(global_zone4_duration) = max(id(global_zone4_duration),0);



  - platform: template
    id: irrigation_zone5_duration_plus
    name: "Zone5 Plus"
    icon: mdi:plus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone5_duration)++;
          id(global_zone5_duration) = min(id(global_zone5_duration),20);

  - platform: template
    id: irrigation_zone5_duration_minus
    name: "Zone5 Minus"
    icon: mdi:minus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone5_duration)--;
          id(global_zone5_duration) = max(id(global_zone5_duration),0);



  - platform: template
    id: irrigation_zone6_duration_plus
    name: "Zone6 Plus"
    icon: mdi:plus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone6_duration)++;
          id(global_zone6_duration) = min(id(global_zone6_duration),20);

  - platform: template
    id: irrigation_zone6_duration_minus
    name: "Zone6 Minus"
    icon: mdi:minus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_zone6_duration)--;
          id(global_zone6_duration) = max(id(global_zone6_duration),0);



  - platform: template
    id: irrigation_start_plus
    name: "Start Plus"
    icon: mdi:plus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_start_hour) = (id(global_start_hour) + 1) % 48;

  - platform: template
    id: irrigation_start_minus
    name: "Start Minus"
    icon: mdi:minus-box-outline
    lambda: |-
      return false;
    turn_on_action:
      - lambda: |-
          id(global_start_hour) = (id(global_start_hour) - 1) % 48;





script:
  - id: execute_cycle
    then:
      - switch.turn_on: relay_valve_zone1
      - wait_until:
          switch.is_off: relay_valve_zone1
      - switch.turn_on: relay_valve_zone2
      - wait_until:
          switch.is_off: relay_valve_zone2
      - switch.turn_on: relay_valve_zone3
      - wait_until:
          switch.is_off: relay_valve_zone3
      - switch.turn_on: relay_valve_zone4
      - wait_until:
          switch.is_off: relay_valve_zone4
      - switch.turn_on: relay_valve_zone5
      - wait_until:
          switch.is_off: relay_valve_zone5
      - switch.turn_on: relay_valve_zone6
      - wait_until:
          switch.is_off: relay_valve_zone6
      - switch.turn_off: irrigation_cycle_active


