# Water monitor:
# - Water consumption - pulse output
# - Pressure sensor (analog output)
# - Electronically controllable valve (9VDC)
# 
#                                                     | () |  GND
#           +-------------------+                     |    | 
#           |     ANTENNA       |                     | () |  REED1
#           |                   |                     |    |
#           |                   |                     | () |  REED2
#           |                   |                     |    |
#          o| 5V         GPI39  |o    Vsupp           | () |  REED3
#     3V3 -o| 3V3        GPI36  |o    CT2             |    |
#     GND -o| GND        GPI35  |o    CT1             | () |  CT1_REF
#          o| ESP_EN     GPI34  |o    (Button1)       |    |
# RESERVED o| GPIO0     GPIO33  |o                    | () |  CT2_REF
# RESERVED o| GPIO1     GPIO32  |o                    |    |
#          o| GPIO2     GPIO16  |o                    | () |  CT1
#  REED1   o| GPIO3     GPIO15  |o  smk_alrm_ic_drive |    |
#  REED2   o| GPIO4     GPIO14  |o  GPIO14            | () |  CT2
#  REED3   o| GPIO5     GPIO13  |o  Alarm Sense       | -- |
#           |                   |                     | () |  GND
#           |                   |                     |    |
#           |                   |                     | () |  GND
#           |                   |                     |    |
#           |    ETHERNET       |                     | () |  +5V
#           +-------------------+                     |    |
#                                                     | () | GPIO14
#                                                     |    |
#                                                     | () | Smoke Alarm Sense
#                                                     |    |
#                                                     | () | 'Alarm Horn Trigger'
#                                                     |    |
#                                                     | () | 
#                                                     |    |
#                                                     | () | 
#
# 5V step up
# +---------+  B0505s Bottom View
# | 1 2 3 4 |  1: GND () ---> GND 
# |         |  2: Vin () ---> 5V 
# +---------+  3: 0V  () ---> 5V
#              4: 5V  () ---> 10V   
#
#
#  +10V --------
#                 /------ 
#  GND ----------
#
#
#
#



esphome:
  name: water-monitor
  platform: ESP32
  board: esp32-poe

bluetooth_proxy:

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO17_OUT
  phy_addr: 0
  power_pin: GPIO12

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:


globals:
  - id: global_water_household_volume
    type: int
    restore_value: yes
    initial_value: '0'
  - id: global_water_softener_volume
    type: int
    restore_value: yes
    initial_value: '0'
  - id: global_water_carbon_filter_volume
    type: int
    restore_value: yes
    initial_value: '0'
  - id: global_water_sediment_filter_volume
    type: int
    restore_value: yes
    initial_value: '0'
  - id: global_water_irrigation_volume
    type: int
    restore_value: yes
    initial_value: '0'
  - id: global_water_pool_fill_volume
    type: int
    restore_value: yes
    initial_value: '0'
  - id: global_small_water_leak_last_usage
    type: int
    restore_value: yes
    initial_value: '0'

  - id: global_washer_volume
    type: int
    restore_value: yes
    initial_value: '0'

  - id: global_dishwasher_volume
    type: int
    restore_value: yes
    initial_value: '0'

  - id: global_water_irrigation_is_on
    type: int
    restore_value: no
    initial_value: '0'
  - id: global_water_pool_fill_is_on
    type: int
    restore_value: no
    initial_value: '0'
  - id: global_water_washer_is_on
    type: int
    restore_value: no
    initial_value: '0'
  - id: global_water_dishwasher_is_on
    type: int
    restore_value: no
    initial_value: '0'


sensor:
  - platform: adc
    pin: 35
    id: adc_sensor_raw_water_pressure
    unit_of_measurement: 'psi'
    name: "Water Pressure"
    attenuation: 6dB
    internal: False
    update_interval: 2s
    accuracy_decimals: 1
    device_class: pressure
    filters:
      - calibrate_linear:
          - 0.25 -> 0.0
          - 2.25 -> 100.0

  - platform: pulse_counter
    pin: 36
    count_mode:
      rising_edge: INCREMENT
      falling_edge: INCREMENT
    unit_of_measurement: 'gal/min'
    internal_filter: 12us
    update_interval: 5s
    name: 'Water Flow'
    device_class: water
    
    filters:
      - multiply: 6.0 #Because we sample every 5s
      - multiply: 0.5 #becuase we get sample both on rising and falling edge

    total:
      id: water_consumption
      name: 'Water Consumption'
      device_class: water
      state_class: total_increasing
      unit_of_measurement: 'gal'
      filters:
        - multiply: 0.5

  - platform: template
    id: water_carbon_filter_lifespan
    name: Water Carbon Filter
    device_class: battery
    unit_of_measurement: '%'
    accuracy_decimals: 0
    lambda: |-
      const double life_volume = 600000;
      return 100.0*std::max(0.0,life_volume - id(global_water_carbon_filter_volume)) / life_volume;

  - platform: template
    id: water_sediment_filter_lifespan
    name: Water Sediment Filter
    device_class: battery
    unit_of_measurement: '%'
    accuracy_decimals: 0
    lambda: |-
      const double life_volume = 100000;
      return 100.0*std::max(0.0,life_volume - id(global_water_sediment_filter_volume)) / life_volume;


  - platform: template
    id: water_softener_filter_lifespan
    name: Water Softener
    device_class: battery
    unit_of_measurement: '%'
    accuracy_decimals: 0
    lambda: |-
      const double life_volume = 100000000;
      return 100.0*std::max(0.0,life_volume - id(global_water_softener_volume)) / life_volume;



  - platform: template
    id: water_irrigation_volume
    name: Water Irrigation Volume
    device_class: water
    state_class: total_increasing
    icon: mdi:watering-can-outline
    unit_of_measurement: 'gal'
    accuracy_decimals: 1
    lambda: |-
      return id(global_water_irrigation_volume);

  - platform: template
    id: water_pool_fill_volume
    name: Water Pool Fill Volume
    device_class: water
    state_class: total_increasing
    icon: mdi:waves-arrow-up
    unit_of_measurement: 'gal'
    accuracy_decimals: 1

    lambda: |-
      return id(global_water_pool_fill_volume);

  - platform: template
    id: water_washer_volume
    name: Water Washer Volume
    device_class: water
    state_class: total_increasing
    icon: mdi:washing-machine
    unit_of_measurement: 'gal'
    accuracy_decimals: 1
    lambda: |-
      return id(global_washer_volume);

  - platform: template
    id: water_dishwasher_volume
    name: Water Dishwasher Volume
    device_class: water
    state_class: total_increasing
    icon: mdi:dishwasher
    unit_of_measurement: 'gal'
    accuracy_decimals: 1
    lambda: |-
      return id(global_dishwasher_volume);



  - platform: template
    id: water_household_volume
    name: Water Household Volume
    device_class: water
    state_class: total_increasing
    icon: mdi:shower
    unit_of_measurement: 'gal'
    accuracy_decimals: 1
    lambda: |-
      return id(global_water_household_volume);

display:
  - platform: lcd_gpio
    dimensions: 16x2
    data_pins:
      - GPIO15
      - GPIO16
      - GPIO32
      - GPIO33
    enable_pin: GPIO14
    rs_pin: GPIO13
    lambda: |-

      std::string text_waterinfo = id(water_info).state;
      it.printf(0,0,"%20s",text_waterinfo.c_str());


number:
  - platform: template
    id: water_household_volume_input
    name: Household Volume
    min_value: 0
    max_value: 100000000
    step: 0
    lambda: |-
      return id(global_water_household_volume);
    entity_category: diagnostic
    unit_of_measurement: 'gal'
    set_action:
      lambda: !lambda |-
          id(global_water_household_volume) = x;

  - platform: template
    id: water_softener_volume_input
    name: Softener Volume
    min_value: 0
    max_value: 100000000
    unit_of_measurement: 'gal'
    step: 0
    lambda: |-
      return id(global_water_softener_volume);
    entity_category: diagnostic
    set_action:
      lambda: !lambda |-
          id(global_water_softener_volume) = x;


  - platform: template
    id: water_carbon_filter_volume_input
    name: Carbon Filter Volume
    min_value: 0
    max_value: 100000000
    step: 0
    lambda: |-
      return id(global_water_carbon_filter_volume);
    entity_category: diagnostic
    unit_of_measurement: 'gal'

    set_action:
      lambda: !lambda |-
          id(global_water_carbon_filter_volume) = x;


  - platform: template
    id: water_sediment_filter_volume_input
    name: Sediment Filter Volume
    min_value: 0
    max_value: 100000000
    step: 0
    lambda: |-
      return id(global_water_sediment_filter_volume);
    entity_category: diagnostic
    unit_of_measurement: 'gal'
    set_action:
      lambda: !lambda |-
          id(global_water_sediment_filter_volume) = x;

  - platform: template
    id: water_irrigation_volume_input
    name: Water Irrigation Volume
    min_value: 0
    max_value: 100000000
    step: 0
    lambda: |-
      return id(global_water_irrigation_volume);
    entity_category: diagnostic
    unit_of_measurement: 'gal'
    set_action:
      lambda: !lambda |-
          id(global_water_irrigation_volume) = x;

  - platform: template
    id: water_pool_fill_volume_input
    name: Pool Fill Volume
    min_value: 0
    max_value: 100000000
    step: 0
    lambda: |-
      return id(global_water_pool_fill_volume);
    entity_category: diagnostic
    unit_of_measurement: 'gal'
    set_action:
      lambda: !lambda |-
          id(global_water_pool_fill_volume) = x;



  - platform: template
    id: washer_volume_input
    name: Washer Volume
    min_value: 0
    max_value: 100000000
    step: 0
    lambda: |-
      return id(global_washer_volume);
    entity_category: diagnostic
    unit_of_measurement: 'gal'
    set_action:
      lambda: !lambda |-
          id(global_washer_volume) = x;


  - platform: template
    id: dishwasher_volume_input
    name: Dishwasher Volume
    min_value: 0
    max_value: 100000000
    step: 0
    lambda: |-
      return id(global_dishwasher_volume);
    entity_category: diagnostic
    unit_of_measurement: 'gal'
    set_action:
      lambda: !lambda |-
          id(global_dishwasher_volume) = x;




text_sensor:
  - platform: version
    name: "Version"
    entity_category: diagnostic


  - platform: ethernet_info
    ip_address:
      name: ESP IP Address
    #entity_category: diagnostic

  - platform: template
    id: water_info
    name: "Water Info"
    icon: mdi:water-drop
    entity_category: diagnostic
    lambda: |-
      static std::string prev = "";
      std::string res;
      res.resize(256,' ');
      int len = sprintf((char *)res.data(),"%.0f psi %d gal",
        id(adc_sensor_raw_water_pressure).state,
        id(global_water_household_volume));

      res.resize(len);

      bool same = prev.compare(res) == 0;
      prev = res;
      
      if (same) {
        return {};
      } else {
        return res;
      }
    update_interval: 250ms


binary_sensor:

  - platform: gpio
    id: water_pulse
    pin: GPIO36
    internal: true
    filters:
       - delayed_on_off: 50ms
       - lambda: |-
          int contributors = 0;
          if (id(global_water_irrigation_is_on)) contributors++;
          if (id(global_water_pool_fill_is_on)) contributors++;
          if (id(global_water_washer_is_on)) contributors++;
          if (id(global_water_dishwasher_is_on)) contributors++;

          float contribution = x;
          if (contributors > 0) {
            contribution *= 1.0 / (float)contributors;
            if (id(global_water_irrigation_is_on)) id(global_water_irrigation_volume) += contribution;
            if (id(global_water_pool_fill_is_on))  id(global_water_pool_fill_volume) += contribution;
            if (id(global_water_washer_is_on))     id(global_washer_volume) += contribution;
            if (id(global_water_dishwasher_is_on)) id(global_dishwasher_volume) += contribution;
          } else {
            id(global_water_household_volume) += contribution;
          }

          if (id(global_water_irrigation_is_on) || id(global_water_pool_fill_is_on))  {
          } else {
            id(global_water_softener_volume) += x;
            id(global_water_carbon_filter_volume) += x;
            id(global_water_sediment_filter_volume) += x;
          }
          return x;

  - platform: status
    name: "Water Monitor"

  - platform: gpio
    id: water_main_valve_is_fully_open
    device_class: Door
    pin:
      number: 2
      mode: INPUT_PULLUP

  - platform: gpio
    id: water_main_valve_is_fully_closed
    device_class: Door
    pin:
      number: 3
      mode: INPUT_PULLUP

  - platform: template
    id: water_small_leak
    device_class: problem
    lambda: |-
      if (id(water_main_valve_is_fully_open).state) {
        return true;
      } else {
        return false;
      }




switch:
  - platform: template
    id: water_irrigation_is_on
    name: Water Irrigation Is On
    icon: mdi:watering-can
    entity_category: diagnostic
    lambda: |-
      return id(global_water_irrigation_is_on) > 0;
    turn_on_action:
      then: 
      - lambda: "id(global_water_irrigation_is_on) = 1;"
      - delay: 2h
      - switch.turn_off: water_irrigation_is_on

    turn_off_action:
      - lambda: |-
          id(global_water_irrigation_is_on) = 0;


  - platform: template
    id: water_pool_fill_is_on
    name: Water Pool Fill Is On
    icon: mdi:waves-arrow-up
    entity_category: diagnostic

    lambda: |-
       return id(global_water_pool_fill_is_on) > 0;
    turn_on_action:
      then: 
      - lambda: "id(global_water_pool_fill_is_on) = 1;"
      - delay: 2h
      - switch.turn_off: water_pool_fill_is_on

    turn_off_action:
      - lambda: |-
          id(global_water_pool_fill_is_on) = 0;


  - platform: template
    id: water_washer_is_on
    name: Water Washer Is On
    icon: mdi:washing-machine
    entity_category: diagnostic

    lambda: |-
      return id(global_water_washer_is_on) > 0;
    turn_on_action:
      then: 
      - lambda: "id(global_water_washer_is_on) = 1;"
      - delay: 2h
      - switch.turn_off: water_washer_is_on

    turn_off_action:
      - lambda: |-
          id(global_water_washer_is_on) = 0;

  - platform: template
    id: water_dishwasher_is_on
    name: Water Dishwasher Is On
    icon: mdi:dishwasher
    entity_category: diagnostic

    lambda: |-
      return id(global_water_dishwasher_is_on) > 0;
    turn_on_action:
      then: 
      - lambda: "id(global_water_dishwasher_is_on) = 1;"
      - delay: 2h
      - switch.turn_off: water_dishwasher_is_on

    turn_off_action:
      - lambda: |-
          id(global_water_dishwasher_is_on) = 0;




  - platform: gpio
    id: water_main_valve_open
    name: Water Main Valve Open
    icon: mdi:valve
    entity_category: diagnostic

    internal: false
    pin: 15
    inverted: false
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - delay: 20s
      - switch.turn_off: water_main_valve_open

  - platform: gpio
    id: water_main_valve_close
    name: Water Main Valve Close
    entity_category: diagnostic

    icon: mdi:valve
    internal: false
    pin: 15
    inverted: false
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - delay: 20s
      - switch.turn_off: water_main_valve_close



cover:
  - platform: endstop
    name: "Water Main Valve"
    device_class: damper
    icon: mdi:valve

    open_action:
      - switch.turn_on: water_main_valve_open
    open_duration: 30s
    open_endstop: water_main_valve_is_fully_open

    close_action:
      - switch.turn_on: water_main_valve_close
    close_duration: 30s
    close_endstop: water_main_valve_is_fully_closed

    stop_action:
      - switch.turn_off: water_main_valve_open
      - switch.turn_off: water_main_valve_close


# Example configuration entry
button:
  - platform: restart
    name: "Restart"
    entity_category: diagnostic

  - platform: template
    id: water_reset_sediment_filter_volume
    name: "Reset Sediment Filter Volume"
    entity_category: diagnostic
    on_press:
      - globals.set:
          id: global_water_sediment_filter_volume
          value: '0'

  - platform: template
    id: water_reset_carbon_filter_volume
    name: "Reset Carbon Filter Volume"
    entity_category: diagnostic
    on_press:
      - globals.set:
          id: global_water_carbon_filter_volume
          value: '0'

  - platform: template
    id: water_reset_softener_volume
    name: "Reset Softener Volume"
    entity_category: diagnostic
    on_press:
      - globals.set:
          id: global_water_softener_volume
          value: '0'
